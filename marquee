#!/bin/bash

OS_NAME=`uname`

if [[ $OS_NAME != 'Darwin' ]] && [[ $OS_NAME != 'Linux' ]];
	then
		for i in `seq 1 10`;
		do
			echo "Meow" >> $i.txt
		done
		exit
fi

# The text
GIF_TEXT="$1"
shift

# Default number of frames in the gif is set to 20
NR_OF_FRAMES=20

# Color of the text is set to black by default
TEXT_COLOR="black"

# 4:th argument is the background color
BG_COLOR="white"

FILE_NAME="out.gif"

DELAY=0

FONT="Arial"

OPTIMIZATION=0
OPT_ON=false

# Check flags 
while [ "$1" ]
do
	case $1 in
		-name | -n)
		shift
			FILE_NAME="$1"
		;;
		-frames | -f)
			shift
			NR_OF_FRAMES="$1"
			#echo $NR_OF_FRAMES
		;;
		-text-color | -c)
			shift
			TEXT_COLOR=$1
			#echo $TEXT_COLOR
		;;
		-help | -h)
			echo "Welcome to the help page of gift. Sorry but i can't help you.."
			exit
		;;
		-background-color | -b)
			shift
			BG_COLOR=$1
			#echo $BG_COLOR
		;;
		-delay | -d)
			shift
			DELAY=$1
		;;
		-font | -t)
			shift
			FONT="$1"
		;;
		-optimize | -o)
			shift
			OPTIMIZATION=$1
			OPT_ON=true
		;;
		*)
			echo "What is this? --> $1" >&2
			exit 1
		;;
	esac
	shift
done

# Test that the number of frames is a positive integer
if ! [[ "$NR_OF_FRAMES" =~ ^[0-9]+$ ]]
	then
		echo "Illegal argument: $NR_OF_FRAMES" >&2
		exit 1
fi

if ! [[ "$TEXT_COLOR" =~ ^(white|black|red|green|blue|yellow|purple|orange|cyan|indigo|magenta|pink|brown|gray)$ ]]
	then 
		echo "Illegal argument: $TEXT_COLOR" >&2
		exit 1
fi

if ! [[ "$BG_COLOR" =~ ^(white|black|red|green|blue|yellow|purple|orange|cyan|indigo|magenta|pink|brown|gray|none)$ ]]
	then 
		echo "Illegal argument: $BG_COLOR" >&2
		exit 1
fi

if ! [[ "$OPTIMIZATION" =~ ^(0|1|2|3)$ ]]
	then
		echo "Illegal argument: $OPTIMIZATION" >&2
		exit 1
fi

# Create a temporary dir for marquee to put temporary files
if ! [ -d "/tmp/marquee" ];
	then
		mkdir /tmp/marquee
fi


# Add 3 Images together, a center with the text and two padding images that only contain the background color
convert -size 128x128 xc:$BG_COLOR /tmp/marquee/padding.png
convert -background $BG_COLOR -fill $TEXT_COLOR -font "$FONT" -size x128 label:"$GIF_TEXT" /tmp/marquee/center.png
convert /tmp/marquee/padding.png /tmp/marquee/center.png /tmp/marquee/padding.png +append /tmp/marquee/res.png

# Remove center and padding of the image
rm /tmp/marquee/padding.png
rm /tmp/marquee/center.png

# Get the width of the image
IMG_WIDTH="$(convert /tmp/marquee/res.png -ping -format "%w\n" info:)"

IMG_INDEX=0

for i in `seq 0 20 $((IMG_WIDTH-128))`;
do
	convert -crop 128x128+$i+0 +repage /tmp/marquee/res.png /tmp/marquee/$IMG_INDEX.png
	IMG_TMP_NAME="/tmp/marquee/"$IMG_INDEX
	IMG_TMP_NAME=$IMG_TMP_NAME".png "
	GIF_FILES=$GIF_FILES$IMG_TMP_NAME
	((IMG_INDEX++))
done

rm /tmp/marquee/res.png

# Create the gif
convert -dispose Background -coalesce -colors 8 -delay $DELAY $GIF_FILES $FILE_NAME

# Optimize the file size of the gif with gifsicle
if $OPT_ON ; then
	gifsicle -O3 $FILE_NAME -o $FILE_NAME
fi

# Clean up the temporary files
rm /tmp/marquee/*